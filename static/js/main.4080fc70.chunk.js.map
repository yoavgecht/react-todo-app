{"version":3,"sources":["components/Header.js","components/Todo.js","actions/todoActions.js","components/AddNewTodo.js","components/TodoList.js","components/NewTodo.js","components/EditTodo.js","App.js","serviceWorker.js","reducers/todosReducer.js","reducers/rootReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","connect","dispatch","deleteTodo","id","type","_ref","todo","handleDelete","handleEdit","title","content","onClick","e","Link","to","pathname","concat","state","AddNewTodo","TodoList","todos","allTodos","length","map","components_Todo","key","components_AddNewTodo","NewTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","inputValue","target","value","Math","floor","random","name","errors","assign","setState","prevState","_objectSpread2","objectSpread","defineProperty","_objectSpread3","handleSubmit","preventDefault","checkValidation","addTodo","history","push","nextProps","onSubmit","htmlFor","onChange","role","Component","EditTodo","_props$history$locati","location","editTodo","editedTodo","App","bind","assertThisInitialized","isValid","forEach","singleTodo","_this2","components_Header","BrowserRouter","basename","process","Switch","Route","exact","path","render","components_TodoList","components_NewTodo","components_EditTodo","Boolean","window","hostname","match","initState","todosReducer","arguments","undefined","action","filter","toConsumableArray","newTodos","index","findIndex","rootReducer","combineReducers","store","createStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4080fc70.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"page-header\">\n            <h1 className=\"text-center\">Todo App</h1>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteTodo } from '../actions/todoActions';\n\nconst Todo = ({ todo, handleDelete, handleEdit, deleteTodo }) => {\n    handleDelete = (id) => {\n        deleteTodo(id);\n    }\n    return (\n        <div className=\"list-group-item text-center\">\n            <h5>{todo.title}</h5>\n            <p>{todo.content}</p>\n            <span className=\"fa fa-trash\" onClick={(e) => handleDelete(todo.id)}></span>\n            <Link to={{pathname:`/editTodo/${todo.id}`, state: {title: todo.title, content:todo.content, id:todo.id}}}><span className=\"fa fa-edit\"></span></Link>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteTodo: (id) => { dispatch(deleteTodo(id))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Todo);","export const deleteTodo = (id) => {\n    return {\n        type: 'DELETE_TODO',\n        id\n    }\n}\n\nexport const addTodo = (todo) => {\n    return {\n        type: 'ADD_TODO',\n        todo\n    }    \n}\n\nexport const editTodo = (todo) => {\n    return {\n        type: 'EDIT_TODO',\n        editedTodo: todo \n    }    \n}","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst AddNewTodo = () => {\n    return (\n       <Link to='/newTodo'><button className=\"btn btn-primary\">Add New Todo</button></Link>\n    );\n}\n\nexport default AddNewTodo;","import React from 'react';\nimport Todo from './Todo';\nimport AddNewTodo from './AddNewTodo';\n\nconst TodoList = ({todos}) => {\n    const allTodos = todos.length > 0 ? (todos.map((todo) => {\n        return <Todo key={todo.id} todo={todo} />\n    })) : (<div>No todos yet...</div>)\n    return (\n        <div className=\"form-group\">\n            {allTodos}\n            <AddNewTodo />\n        </div>\n    )\n}\n\nexport default TodoList;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions/todoActions';\n\nclass NewTodo extends Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            todo: {\n                title: '', \n                content: '', \n                id: 0\n            },\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        this.setState({errors: nextProps.errors})\n    }\n\n    handleInputChange = (e) => {\n        let inputValue = e.target.value;\n        let id = Math.floor(Math.random() * 100);\n        let key = [e.target.name];\n        if(this.state.errors[e.target.name]) {\n            var errors = Object.assign({}, this.state.errors);\n            delete errors[e.target.name];\n            this.setState(prevState => ({\n                todo:{\n                    ...prevState.todo,\n                    [key] : inputValue,\n                    id\n                },\n                errors\n            }))\n\n        } else {\n            this.setState(prevState => ({\n                todo:{\n                    ...prevState.todo,\n                    [key] : inputValue,\n                    id\n                }\n            }))\n        }\n        \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.props.checkValidation(this.state.todo)){\n            this.props.addTodo(this.state.todo);\n            this.setState({todo:{title: '', content: ''}});\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Todo Title:</label>\n                        <input type=\"text\" id=\"title\" name=\"title\" className=\"form-control\" value={this.state.todo.title} onChange={this.handleInputChange}/>\n                         {this.state.errors.title && <div className=\"alert alert-danger\" role=\"alert\">\n                           {this.state.errors.title}\n                        </div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"content\">Todo content:</label>\n                         <textarea className=\"form-control\" id=\"content\" name=\"content\" value={this.state.todo.content} onChange={this.handleInputChange}></textarea>\n                         {this.state.errors.content && <div className=\"alert alert-danger\" role=\"alert\">{this.state.errors.content}\n                    </div>}\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (todo) => {dispatch(addTodo(todo))}\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editTodo } from '../actions/todoActions';\n\nclass EditTodo extends Component {\n     constructor(props) {\n        const {title, content, id} = props.history.location.state\n        super(props);\n         this.state = {\n            todo: {\n                title, \n                content,\n                id\n            },\n            errors: {}\n        }\n    }\n  \n   componentWillReceiveProps(nextProps){\n        this.setState({errors: nextProps.errors})\n    }\n\n    handleInputChange = (e) => {\n        let inputValue = e.target.value;\n        let key = [e.target.name];\n        if(this.state.errors[e.target.name]) {\n            var errors = Object.assign({}, this.state.errors);\n            delete errors[e.target.name];\n            this.setState(prevState => ({\n                todo:{\n                    ...prevState.todo,\n                    [key] : inputValue\n                },\n                errors\n            }))\n\n        } else {\n            this.setState(prevState => ({\n                todo:{\n                    ...prevState.todo,\n                    [key] : inputValue,\n                }\n            }))\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.props.checkValidation(this.state.todo)){\n            this.props.editTodo(this.state.todo);\n            this.setState({todo:{title: '', content: ''}});\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Todo Title:</label>\n                        <input type=\"text\" id=\"title\" name=\"title\" className=\"form-control\" value={this.state.todo.title} onChange={this.handleInputChange}/>\n                         {this.state.errors.title && <div className=\"alert alert-danger\" role=\"alert\">\n                           {this.state.errors.title}\n                        </div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"content\">Todo content:</label>\n                        <textarea className=\"form-control\" id=\"content\" name=\"content\" value={this.state.todo.content} onChange={this.handleInputChange}></textarea>\n                         {this.state.errors.content && <div className=\"alert alert-danger\" role=\"alert\">{this.state.errors.content}\n                    </div>}\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editTodo: (todo) => {dispatch(editTodo(todo))}\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(EditTodo);","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\nimport EditTodo from './components/EditTodo';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props){\n    super(props) \n    this.checkValidation = this.checkValidation.bind(this);\n    this.state={errors: {}};\n  }\n\n      checkValidation(todo) {\n         let errors = {};\n         let isValid = true;\n       \n         this.props.todos.forEach((singleTodo) => {\n             if(todo.title === singleTodo.title && todo.content === singleTodo.content){\n                   errors.title = \"Todo already exists...\";\n                   isValid = false;\n             }\n         })\n\n         if (typeof todo.title === 'string' && todo.title === '') {\n            errors.title = \"Title can't be empty\";\n            isValid = false\n         }\n\n         if(typeof todo.title === 'string' && todo.title.length < 2 && todo.title !== '') {\n             errors.title = \"Title must be more then 1 char\";\n             isValid = false\n         }\n\n         if (typeof todo.content === 'string' && todo.content === '') {\n              errors.content = \"Content can't be empty\";\n              isValid = false\n         }\n\n         if(typeof todo.content === 'string' && todo.content.length < 2 && todo.content !== '') {\n             errors.content = \"Content must be more then 1 char\";\n             isValid = false\n         }\n\n         this.setState({errors});\n         return isValid;\n    }\n\n\n\n  render() {\n    const { todos } = this.props;\n    return (\n      <div className=\"container\">\n        <Header />\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n              <Route exact path='/' render={(props) => <TodoList {...props} todos={todos} />} /> \n              <Route path='/newTodo' render={(props) => <NewTodo {...props} checkValidation={this.checkValidation} errors={this.state.errors}/> } />\n              <Route path='/editTodo/:id' render={(props) => <EditTodo {...props} checkValidation={this.checkValidation} errors={this.state.errors}/>} />\n          </Switch>\n         </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    todos: [\n        { id: 1, title: 'Make a todo app', content: 'Do it!'},\n      ]\n    }\n\nconst todosReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'DELETE_TODO':\n        const todos = state.filter((todo) => {\n            return todo.id !== action.id\n        });\n\n        return todos\n        \n        case 'ADD_TODO':\n        return [\n            ...state, action.todo\n        ]\n\n        case 'EDIT_TODO':\n        const newTodos = [...state];\n        const index = newTodos.findIndex((todo) => {\n            return action.editedTodo.id === todo.id\n        })\n        newTodos[index].title = action.editedTodo.title;\n        newTodos[index].content = action.editedTodo.content;\n        return newTodos;\n    }\n    return state.todos;\n}\n\nexport default todosReducer;","import { combineReducers } from 'redux';\nimport todosReducer from './todosReducer'\n\nconst rootReducer = combineReducers({\n   todos: todosReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}